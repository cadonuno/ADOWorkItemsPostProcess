parameters:
  organization: ''
  project_name: ''
  azure_base_directory: 'https://dev.azure.com'
  work_item_id_to_link: ''
  user_to_assign: ''
  tag_value_to_filter_issues: ''
  
steps:
- task: CmdLine@2
  name: UpdateTickets
  env:
    API_CREDENTIALS: $(AZURE_API_CREDENTIALS)
  inputs:
    script: |
      expected_blank_credentials='$'"(AZURE_API_CREDENTIALS)"
      if [[ $API_CREDENTIALS == "$expected_blank_credentials" ]]; then 
        echo "Missing AZURE_API_CREDENTIALS environment variable. AZURE_API_CREDENTIALS must be set to post-process ADO work items."
        exit 2
      else 
        updateApiBaseUrl="${{ parameters.Azure_Base_Directory }}/${{ parameters.organization }}/${{ parameters.project_name }}/_apis/wit/workitems/"
        getWorkItemsApiUrl="${{ parameters.Azure_Base_Directory }}/${{ parameters.organization }}/${{ parameters.project_name }}/_apis/wit/wiql?api-version=6.1"
        Authentication="anything:$API_CREDENTIALS"
        
        getWorkItemQuery="{\"query\": \"Select [System.Title] From WorkItems Where [State] <> 'Closed' AND [State] <> 'Removed' AND [System.Tags] contains '${{ parameters.tag_value_to_filter_issues }}'\"}"
        workItemQueryResult=$(curl --silent -X POST -H 'Content-Type: application/json' -u "$Authentication" -d "$getWorkItemQuery" $getWorkItemsApiUrl)

        for workItem in $(echo "${workItemQueryResult}" | jq -r '.workItems[] | @base64'); do
          workItemJson=$(echo "$workItem" | base64 --decode)
          echo $workItemJson
          workItemUrl=$( jq -r  '.url' <<< "${workItemJson}" )
          Body='[
          {
            "op": "add",
            "path": "/relations/-",
            "value": {
              "rel": "System.LinkTypes.Dependency-forward",
              "url": "'"$updateApiBaseUrl"'/${{ parameters.work_item_id_to_link }}",
              "attributes": {
                "comment": "Automatically linked through API"
              }
            }
          },
          {
            "op": "add",
            "path": "/fields/System.AssignedTo",
            "value": {
              "descriptor":"${{ parameters.user_to_assign }}"
            }
          }]'
          endpointUrl=$workItemUrl?api-version=5.0
          queryResults=$(curl -X PATCH -H 'Content-Type: application/json-patch+json' -u "$Authentication" -d "$Body" $endpointUrl)

          echo Ticket updated: $workItemUrl
          echo Called API: $endpointUrl
          echo --
          echo $queryResults

          echo --------------------------
          echo ""
        done
      fi
